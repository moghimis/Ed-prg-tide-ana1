[1;31mType:       [0mfunction
[1;31mBase Class: [0m<type 'function'>
[1;31mString Form:[0m<function plot_date at 0x18586d70>
[1;31mNamespace:  [0mInteractive
[1;31mFile:       [0m/home/local/moghimi/opt/epd-7.3-1-rh5-x86_64/lib/python2.7/site-packages/matplotlib/pyplot.py
[1;31mDefinition: [0m[0mplt[0m[1;33m.[0m[0mplot_date[0m[1;33m([0m[0mx[0m[1;33m,[0m [0my[0m[1;33m,[0m [0mfmt[0m[1;33m=[0m[1;34m'bo'[0m[1;33m,[0m [0mtz[0m[1;33m=[0m[0mNone[0m[1;33m,[0m [0mxdate[0m[1;33m=[0m[0mTrue[0m[1;33m,[0m [0mydate[0m[1;33m=[0m[0mFalse[0m[1;33m,[0m [0mhold[0m[1;33m=[0m[0mNone[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[0m
[1;31mDocstring:[0m
call signature::

   plot_date(x, y, fmt='bo', tz=None, xdate=True, ydate=False, **kwargs)

Similar to the :func:`~matplotlib.pyplot.plot` command, except
the *x* or *y* (or both) data is considered to be dates, and the
axis is labeled accordingly.

*x* and/or *y* can be a sequence of dates represented as float
days since 0001-01-01 UTC.

Keyword arguments:

*fmt*: string
   The plot format string.

*tz*: [ None | timezone string | :class:`tzinfo` instance]
   The time zone to use in labeling dates. If *None*, defaults to rc
   value.

*xdate*: [ True | False ]
   If *True*, the *x*-axis will be labeled with dates.

*ydate*: [ False | True ]
   If *True*, the *y*-axis will be labeled with dates.

Note if you are using custom date tickers and formatters, it
may be necessary to set the formatters/locators after the call
to :meth:`plot_date` since :meth:`plot_date` will set the
default tick locator to
:class:`matplotlib.dates.AutoDateLocator` (if the tick
locator is not already set to a
:class:`matplotlib.dates.DateLocator` instance) and the
default tick formatter to
:class:`matplotlib.dates.AutoDateFormatter` (if the tick
formatter is not already set to a
:class:`matplotlib.dates.DateFormatter` instance).

Valid kwargs are :class:`~matplotlib.lines.Line2D` properties:

  agg_filter: unknown
  alpha: float (0.0 transparent through 1.0 opaque)         
  animated: [True | False]         
  antialiased or aa: [True | False]         
  axes: an :class:`~matplotlib.axes.Axes` instance         
  clip_box: a :class:`matplotlib.transforms.Bbox` instance         
  clip_on: [True | False]         
  clip_path: [ (:class:`~matplotlib.path.Path`,         :class:`~matplotlib.transforms.Transform`) |         :class:`~matplotlib.patches.Patch` | None ]         
  color or c: any matplotlib color         
  contains: a callable function         
  dash_capstyle: ['butt' | 'round' | 'projecting']         
  dash_joinstyle: ['miter' | 'round' | 'bevel']         
  dashes: sequence of on/off ink in points         
  data: 2D array (rows are x, y) or two 1D arrays         
  drawstyle: [ 'default' | 'steps' | 'steps-pre' | 'steps-mid' | 'steps-post' ]         
  figure: a :class:`matplotlib.figure.Figure` instance         
  fillstyle: ['full' | 'left' | 'right' | 'bottom' | 'top']         
  gid: an id string         
  label: any string         
  linestyle or ls: [ ``'-'`` | ``'--'`` | ``'-.'`` | ``':'`` | ``'None'`` | ``' '`` | ``''`` ]         and any drawstyle in combination with a linestyle, e.g. ``'steps--'``.         
  linewidth or lw: float value in points         
  lod: [True | False]         
  marker: [ ``7`` | ``4`` | ``5`` | ``6`` | ``'o'`` | ``'D'`` | ``'h'`` | ``'H'`` | ``'_'`` | ``''`` | ``'None'`` | ``None`` | ``' '`` | ``'8'`` | ``'p'`` | ``','`` | ``'+'`` | ``'.'`` | ``'s'`` | ``'*'`` | ``'d'`` | ``3`` | ``0`` | ``1`` | ``2`` | ``'1'`` | ``'3'`` | ``'4'`` | ``'2'`` | ``'v'`` | ``'<'`` | ``'>'`` | ``'^'`` | ``'|'`` | ``'x'`` | ``'$...$'`` | *tuple* | *Nx2 array* ]
  markeredgecolor or mec: any matplotlib color         
  markeredgewidth or mew: float value in points         
  markerfacecolor or mfc: any matplotlib color         
  markerfacecoloralt or mfcalt: any matplotlib color         
  markersize or ms: float         
  markevery: None | integer | (startind, stride)
  picker: float distance in points or callable pick function         ``fn(artist, event)``         
  pickradius: float distance in points         
  rasterized: [True | False | None]         
  snap: unknown
  solid_capstyle: ['butt' | 'round' |  'projecting']         
  solid_joinstyle: ['miter' | 'round' | 'bevel']         
  transform: a :class:`matplotlib.transforms.Transform` instance         
  url: a url string         
  visible: [True | False]         
  xdata: 1D array         
  ydata: 1D array         
  zorder: any number         

.. seealso::

   :mod:`~matplotlib.dates` for helper functions

   :func:`~matplotlib.dates.date2num`,
   :func:`~matplotlib.dates.num2date` and
   :func:`~matplotlib.dates.drange` for help on creating the required
   floating point dates.

Additional kwargs: hold = [True|False] overrides default hold state